<?xml version="1.0" encoding="utf-8"?>
<s:Application 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:skin="com.masuland.religionchooser.skin.*"
	width="100%" height="100%" 
	applicationComplete="creationCompleteHandler(event)" 
	viewSourceURL="srcview/index.html" 
	>
	
	<fx:Metadata>
		[ResourceBundle("resources")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.masuland.religionchooser.control.AppController;
			import com.masuland.religionchooser.event.AppEvent;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;
			import org.springextensions.actionscript.core.event.EventBus;
			import org.springextensions.actionscript.ioc.factory.config.EventHandlerMetaDataPostProcessor;
			import org.springextensions.actionscript.ioc.factory.config.RouteEventsMetaDataPostProcessor;
			import org.springextensions.actionscript.stage.DefaultAutowiringStageProcessor;
			
			private var _compiledClasses:Array = [AppController, EventHandlerMetaDataPostProcessor, DefaultAutowiringStageProcessor, RouteEventsMetaDataPostProcessor];
			private var _appContext:FlexXMLApplicationContext;
			
			//			[Embed(source="application-confid.xml", mimeType ="application/octet-stream")]
			//			public var contextConfig:Class;
			
			private function creationCompleteHandler(event:FlexEvent):void 
			{
				_appContext = new FlexXMLApplicationContext();
				
				// Embed
				//				_appContext.addEmbeddedConfig( contextConfig );
				//				EventBus.dispatchEvent(new AppEvent(AppEvent.INITIALIZE_CLIENT));
				
				// Load
				_appContext.addConfigLocation('application-config.xml');
				_appContext.addEventListener(Event.COMPLETE, applicationContext_completeHandler);
				_appContext.addEventListener(IOErrorEvent.IO_ERROR, applicationContext_ioErrorHandler);
				_appContext.load();
				
			}
			
			private function applicationContext_completeHandler(event:Event):void 
			{
				EventBus.dispatchEvent(new AppEvent(AppEvent.INIT_APP));
			}
			
			private function applicationContext_ioErrorHandler(event:IOErrorEvent):void 
			{
				Alert.show('An error occurred when loading the xml for the application context: "' + event.text + '"', 'Error Loading Application Context');
			}
			
		]]>
	</fx:Script>
	
	<skin:AppView
		id="appView"
		/>
	
</s:Application>
