<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:vo="com.masuland.loginexample.data.vo.*"
	xmlns:validation="com.adobe.cairngorm.validation.*"
	width="100%" height="100%"
	>
	
	<mx:states>
		<mx:State name="login">
			<mx:SetProperty target="{ txt_header }" name="text" value="{ resourceManager.getString('resources', 'title_login') }" />
			<mx:SetProperty target="{ bx_loginButtons }" name="visible" value="true" />
			<mx:SetProperty target="{ bx_loginButtons }" name="includeInLayout" value="true" />
		</mx:State>
		<mx:State name="loginProgress">
			<mx:SetProperty target="{ txt_header }" name="text" value="{ resourceManager.getString('resources', 'title_login_progress') }" />
		</mx:State>
		<mx:State name="register">
			<mx:SetProperty target="{ txt_header }" name="text" value="{ resourceManager.getString('resources', 'title_register') }" />
			<mx:SetProperty target="{ fi_email }" name="visible" value="true" />
			<mx:SetProperty target="{ fi_email }" name="includeInLayout" value="true" />
			<mx:SetProperty target="{ fi_repeatPassword }" name="visible" value="true" />
			<mx:SetProperty target="{ fi_repeatPassword }" name="includeInLayout" value="true" />
			<mx:SetProperty target="{ bx_registerButtons }" name="visible" value="true" />
			<mx:SetProperty target="{ bx_registerButtons }" name="includeInLayout" value="true" />
		</mx:State>
		<mx:State name="registerProgress">
			<mx:SetProperty target="{ txt_header }" name="text" value="{ resourceManager.getString('resources', 'title_register_progress') }" />
		</mx:State>
		<mx:State name="loggedIn">
			<mx:SetProperty target="{ txt_header }" name="text" value="{ resourceManager.getString('resources', 'title_logged_in') }" />
		</mx:State>
	</mx:states>
	
	<mx:Script>
		<![CDATA[
			import com.masuland.loginexample.data.AppModel;
			import com.masuland.loginexample.view.codebehind.LoginBoxCB;
			
			[Inject]
			[Bindable]
			public var appModel:AppModel;
			
			[Inject]
			[Bindable]
			public var cb:LoginBoxCB;
		]]>
	</mx:Script>

	<vo:AuthenticationVO
		id="vo_auth"
		username="{ tip_username.text }"
		password="{ tip_password.text }"
		email="{ tip_email.text }"
		/>
	
	<validation:ValidatorGroupSubscriber 
		resetValidationFeedbackOnFocusIn="true"
		>
		<validation:ValidatorSubscriber 
			validator="{ cb.validatorGroup.val_username }" 
			listener="{ tip_username }"
			/>
		<validation:ValidatorSubscriber 
			validator="{ cb.validatorGroup.val_password }" 
			listener="{ tip_password }"
			/>
	</validation:ValidatorGroupSubscriber>
	
	<mx:VBox
		left="5" right="5" top="5" bottom="5"
		>
		
		<mx:Label
			id="txt_header"
			width="100%"
			styleName="loginHeader"
			/>
		
		<mx:HRule
			width="100%"
			/>
		
		<mx:Canvas
			width="100%" height="100%"
			>
			
			<mx:Form
				horizontalCenter="0" verticalCenter="0"
				>
				<mx:FormItem
					width="100%"
					label="{ resourceManager.getString('resources', 'txt_username') }"
					direction="horizontal"
					required="false"
					>
					<mx:TextInput
						id="tip_username"
						width="100%"
						text="@{ cb.username }"
						change="cb.validatorGroup.validate()"
						enter="cb.validatorGroup.isValid ? cb.ctaLoginOrRegister(vo_auth, currentState) : false"
						/>
				</mx:FormItem>
				<mx:FormItem
					id="fi_email"
					width="100%"
					label="{ resourceManager.getString('resources', 'txt_email') }"
					direction="horizontal"
					required="false"
					visible="false"
					includeInLayout="false"
					>
					<mx:TextInput
						id="tip_email"
						width="100%"
						text="@{ cb.email }"
						change="cb.validatorGroup.validate()"
						enter="cb.validatorGroup.isValid ? cb.ctaLoginOrRegister(vo_auth, currentState) : false"
						/>
				</mx:FormItem>
				<mx:FormItem
					width="100%"
					label="{ resourceManager.getString('resources', 'txt_password') }"
					direction="horizontal"
					required="false"
					>
					<mx:TextInput
						id="tip_password"
						width="100%"
						text="@{ cb.password }"
						displayAsPassword="true"
						change="cb.validatorGroup.validate()"
						enter="cb.validatorGroup.isValid ? cb.ctaLoginOrRegister(vo_auth, currentState) : false"
						/>
				</mx:FormItem>
				<mx:FormItem
					id="fi_repeatPassword"
					width="100%"
					label="{ resourceManager.getString('resources', 'txt_repeat_password') }"
					direction="horizontal"
					required="false"
					visible="false"
					includeInLayout="false"
					>
					<mx:TextInput
						id="tip_repeatPassword"
						width="100%"
						text="@{ cb.repeatPassword }"
						displayAsPassword="true"
						change="cb.validatorGroup.validate()"
						enter="cb.validatorGroup.isValid ? cb.ctaLoginOrRegister(vo_auth, currentState) : false"
						/>
				</mx:FormItem>
				<mx:FormItem
					>
					<mx:HBox
						id="bx_loginButtons"
						visible="false"
						includeInLayout="false"
						>
						<mx:Button
							id="btn_doLogin"
							label="{ resourceManager.getString('resources', 'cta_login') }"
							enabled="{ cb.validatorGroup.isValid }"
							buttonMode="true" 
							useHandCursor="true"
							click="cb.ctaLoginOrRegister(vo_auth, currentState)"
							/>
						<mx:LinkButton
							id="btn_gotoRegister"
							label="{ resourceManager.getString('resources', 'cta_goto_register') }"
							click="cb.gotoRegister()"
							/>
					</mx:HBox>
					<mx:HBox
						id="bx_registerButtons"
						visible="false"
						includeInLayout="false"
						>
						<mx:Button
							id="btn_doRegister"
							label="{ resourceManager.getString('resources', 'cta_register') }"
							enabled="{ cb.validatorGroup.isValid }"
							buttonMode="true"
							useHandCursor="true"
							click="cb.ctaLoginOrRegister(vo_auth, currentState)"
							/>
						<mx:LinkButton
							id="btn_gotoLogin"
							label="{ resourceManager.getString('resources', 'cta_goto_login') }"
							click="cb.gotoLogin()"
							/>
					</mx:HBox>
				</mx:FormItem>
			</mx:Form>
			
		</mx:Canvas>
		
	</mx:VBox>
	
</mx:Canvas>
